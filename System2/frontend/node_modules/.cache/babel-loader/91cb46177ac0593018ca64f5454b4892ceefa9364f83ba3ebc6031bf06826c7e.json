{"ast":null,"code":"var _jsxFileName = \"/home/deck/Documents/School/System Integration/Midterms Mern/frontend/src/pages/Login.js\",\n  _s = $RefreshSig$();\n/*import React from \"react\";\nimport { GoogleLogin } from \"@react-oauth/google\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Login() {\n  const navigate = useNavigate();\n  const handleSuccess = (credentialResponse) => {\n    const token = credentialResponse.credential; // Google ID Token\n    localStorage.setItem(\"token\", token); // Store token in local storage\n    console.log(\"Login Success:\", token);\n    navigate(\"/dashboard\"); // Redirect to Dashboard\n  };\n  return (\n\n    <div>\n         <h1>Login</h1>\n         <GoogleLogin onSuccess={handleSuccess} onError={() => console.log(\"Login Failed\")} />\n    </div>\n  );\n}*/\n\nimport React, { useEffect } from \"react\";\nimport { gapi } from \"gapi-script\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = \"901238362479-qhi62371a9f08ma2jmlmbh1vbctruivj.apps.googleusercontent.com\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const initClient = () => {\n      gapi.load(\"client:auth2\", () => {\n        gapi.client.init({\n          clientId: clientId,\n          scope: \"https://www.googleapis.com/auth/classroom.courses.readonly\"\n        });\n      });\n    };\n    initClient();\n  }, []);\n  const handleLogin = () => {\n    const authInstance = gapi.auth2.getAuthInstance();\n    authInstance.signIn().then(googleUser => {\n      const token = googleUser.getAuthResponse().access_token;\n      console.log(\"Google ID Token:\", token);\n      fetch(\"http://localhost:5000/auth/google\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          token\n        })\n      }).then(res => res.json()).then(data => {\n        localStorage.setItem(\"token\", token);\n        navigate(\"/dashboard\");\n      }).catch(error => console.error(\"Error:\", error));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","gapi","useNavigate","jsxDEV","_jsxDEV","clientId","Login","_s","navigate","initClient","load","client","init","scope","handleLogin","authInstance","auth2","getAuthInstance","signIn","then","googleUser","token","getAuthResponse","access_token","console","log","fetch","method","headers","body","JSON","stringify","res","json","data","localStorage","setItem","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/deck/Documents/School/System Integration/Midterms Mern/frontend/src/pages/Login.js"],"sourcesContent":["/*import React from \"react\";\nimport { GoogleLogin } from \"@react-oauth/google\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Login() {\n  const navigate = useNavigate();\n  const handleSuccess = (credentialResponse) => {\n    const token = credentialResponse.credential; // Google ID Token\n    localStorage.setItem(\"token\", token); // Store token in local storage\n    console.log(\"Login Success:\", token);\n    navigate(\"/dashboard\"); // Redirect to Dashboard\n  };\n  return (\n\n    <div>\n         <h1>Login</h1>\n         <GoogleLogin onSuccess={handleSuccess} onError={() => console.log(\"Login Failed\")} />\n    </div>\n  );\n}*/\n\nimport React, { useEffect } from \"react\";\n\nimport { gapi } from \"gapi-script\";\n\nimport { useNavigate } from \"react-router-dom\";\n\n\n\nconst clientId = \"901238362479-qhi62371a9f08ma2jmlmbh1vbctruivj.apps.googleusercontent.com\";\n\n\n\nconst Login = () => {\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n\n    const initClient = () => {\n\n      gapi.load(\"client:auth2\", () => {\n\n        gapi.client.init({\n\n          clientId: clientId,\n\n          scope: \"https://www.googleapis.com/auth/classroom.courses.readonly\",\n\n        });\n\n      });\n\n    };\n    initClient();\n\n  }, []);\n\n\n\n  const handleLogin = () => {\n\n    const authInstance = gapi.auth2.getAuthInstance();\n\n    authInstance.signIn().then((googleUser) => {\n\n      const token = googleUser.getAuthResponse().access_token;\n\n      console.log(\"Google ID Token:\", token);\n\n\n\n      fetch(\"http://localhost:5000/auth/google\", {\n\n        method: \"POST\",\n\n        headers: {\n\n          \"Content-Type\": \"application/json\",\n\n        },\n\n        body: JSON.stringify({ token }),\n\n      })\n      .then((res) => res.json())\n\n        .then((data) => {\n\n          localStorage.setItem(\"token\", token);\n\n          navigate(\"/dashboard\");\n\n        })\n\n        .catch((error) => console.error(\"Error:\", error));\n\n    });\n\n  };\n\n\n\n  return (\n\n    <div>\n\n      <h2>Login with Google</h2>\n\n      <button onClick={handleLogin}>Sign in with Google</button>\n\n    </div>\n\n  );\n\n};\n\n\n\nexport default Login;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,SAASC,IAAI,QAAQ,aAAa;AAElC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI/C,MAAMC,QAAQ,GAAG,0EAA0E;AAI3F,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IAEd,MAAMS,UAAU,GAAGA,CAAA,KAAM;MAEvBR,IAAI,CAACS,IAAI,CAAC,cAAc,EAAE,MAAM;QAE9BT,IAAI,CAACU,MAAM,CAACC,IAAI,CAAC;UAEfP,QAAQ,EAAEA,QAAQ;UAElBQ,KAAK,EAAE;QAET,CAAC,CAAC;MAEJ,CAAC,CAAC;IAEJ,CAAC;IACDJ,UAAU,CAAC,CAAC;EAEd,CAAC,EAAE,EAAE,CAAC;EAIN,MAAMK,WAAW,GAAGA,CAAA,KAAM;IAExB,MAAMC,YAAY,GAAGd,IAAI,CAACe,KAAK,CAACC,eAAe,CAAC,CAAC;IAEjDF,YAAY,CAACG,MAAM,CAAC,CAAC,CAACC,IAAI,CAAEC,UAAU,IAAK;MAEzC,MAAMC,KAAK,GAAGD,UAAU,CAACE,eAAe,CAAC,CAAC,CAACC,YAAY;MAEvDC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,KAAK,CAAC;MAItCK,KAAK,CAAC,mCAAmC,EAAE;QAEzCC,MAAM,EAAE,MAAM;QAEdC,OAAO,EAAE;UAEP,cAAc,EAAE;QAElB,CAAC;QAEDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEV;QAAM,CAAC;MAEhC,CAAC,CAAC,CACDF,IAAI,CAAEa,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAEvBd,IAAI,CAAEe,IAAI,IAAK;QAEdC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEf,KAAK,CAAC;QAEpCb,QAAQ,CAAC,YAAY,CAAC;MAExB,CAAC,CAAC,CAED6B,KAAK,CAAEC,KAAK,IAAKd,OAAO,CAACc,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;IAErD,CAAC,CAAC;EAEJ,CAAC;EAID,oBAEElC,OAAA;IAAAmC,QAAA,gBAEEnC,OAAA;MAAAmC,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1BvC,OAAA;MAAQwC,OAAO,EAAE9B,WAAY;MAAAyB,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvD,CAAC;AAIV,CAAC;AAACpC,EAAA,CAlFID,KAAK;EAAA,QAEQJ,WAAW;AAAA;AAAA2C,EAAA,GAFxBvC,KAAK;AAsFX,eAAeA,KAAK;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}